{"version":3,"sources":["Sidebar/sidebar.module.scss","Job/Header/header.module.css","Content/content.module.css","App/app.module.scss","Job/Table/table.module.scss","shared/SnackbarProvider/index.jsx","App/AppProvider.jsx","util/axios.js","UserProvider/index.jsx","Header/UserWidget/index.jsx","Header/index.jsx","Sidebar/index.jsx","Job/NewJobDialogBox/index.jsx","Job/Header/index.jsx","Job/SingleJobDialog/index.jsx","WindowWidthProvider/index.jsx","Job/Table/index.jsx","Job/index.jsx","Content/index.jsx","App/index.jsx","Login/index.jsx","route.jsx","MaterialThemeProvider/theme.js","MaterialThemeProvider/index.jsx","HeadProvider.jsx","Root.js","reportWebVitals.js","index.js"],"names":["module","exports","SnackbarProvider","props","React","useState","message","setMessage","SnackbarContext","createContext","Provider","value","notify","setTimeout","children","Snackbar","open","autoHideDuration","AppContext","AppProvider","isSidebarOpen","setIsSidebarOpen","http","axios","create","baseURL","process","interceptors","request","use","accessToken","localStorage","getItem","headers","authorization","response","setItem","split","UserContext","UserProvider","user","setUser","isLoading","setIsLoading","useEffect","get","then","data","error","finally","isUserLoading","setIsUserLoading","UserWidget","className","useContext","history","useHistory","anchorEl","setAnchorEl","Boolean","handleMenuClose","IconButton","onClick","event","push","currentTarget","onClose","MenuItem","username","removeItem","Header","AppBar","position","color","Toolbar","edge","Typography","variant","style","marginLeft","Sidebar","classes","wrapper","show","hidden","List","ListItem","disablePadding","ListItemButton","ListItemText","primary","NewJobDialogBox","handleClose","createJob","selected","updateJob","isUpdate","customerName","setCustomerName","serialNumber","setSerialNumber","model","setModel","issues","setIssues","brand","setBrand","status","setStatus","amount","setAmount","moment","format","receivedDate","setReceivedDate","returnedDate","setReturnedDate","detailedDescription","setDetailedDescription","resetInputs","handleSubmit","handleJobUpdate","handleJobCreate","id","_id","Dialog","TextField","size","onChange","e","target","label","type","FormControl","InputLabel","Select","defaultValue","InputLabelProps","shrink","multiline","Button","JobHeader","addNew","Box","display","justifyContent","alignItems","component","SingleJobDialog","job","padding","fontWeight","WindowWidthContext","WindowWidthProvider","width","setWidth","handleWindowResize","window","innerWidth","addEventListener","removeEventListener","JobTable","currentRowEl","setCurrentRowEl","TableContainer","Table","TableHead","TableRow","TableCell","cell","th","TableBody","jobs","map","td","scope","console","log","opt_cell","current","handleOptionClick","keepMounted","handleViewJob","handleUpdate","handleDelete","Job","setIsUpdate","newDialogIsOpen","setNewDialogBoxIsOpen","singleDialogIsOpen","setSingleDialogBoxIsOpen","services","setServices","handleNewJobDialogClose","handleNewJobDialogOpen","currentSelectedJobDetails","useRef","newJob","a","post","result","updatedJob","put","deleteJob","delete","Content","exact","path","App","content_wrapper","Login","setUsername","password","setPassword","Paper","flexDirection","MainRouter","createTheme","palette","main","secondary","MaterialThemeProvider","ThemeProvider","theme","CssBaseline","HeadProvider","Root","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.181aa256.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"sidebar_wrapper__15K6k\",\"hidden\":\"sidebar_hidden__gLZCh\",\"show\":\"sidebar_show__cmkqc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"header_wrapper__2Ks2h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"content_wrapper__3SaDL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content_wrapper\":\"app_content_wrapper__170RZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"table_wrapper__ziDrt\",\"cell\":\"table_cell__1XAhc\",\"th\":\"table_th__FPD0d\",\"td\":\"table_td__27OyA\",\"opt_cell\":\"table_opt_cell__xQNra\"};","import { Snackbar } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst SnackbarProvider = (props) => {\r\n    const [message, setMessage] = React.useState(\"\");\r\n    const SnackbarContext = React.createContext(\"\");\r\n    const notify = (message) => {\r\n        setMessage(message);\r\n        setTimeout(() => setMessage(\"\"), 7000)\r\n    }\r\n    return (\r\n        <SnackbarContext.Provider value={{ notify }}>\r\n            {props.children}\r\n            <Snackbar open={!!message} autoHideDuration={6000} message={message} />\r\n        </SnackbarContext.Provider>\r\n    )\r\n}\r\nexport default SnackbarProvider;","import React from \"react\";\r\n\r\nexport const AppContext = React.createContext({});\r\nconst AppProvider = ({ children }) => {\r\n    const [isSidebarOpen, setIsSidebarOpen] = React.useState(false);\r\n    return <AppContext.Provider value={{ isSidebarOpen, setIsSidebarOpen }}>{children}</AppContext.Provider>\r\n}\r\nexport default AppProvider;","import axios from \"axios\";\r\nconst http = axios.create({ baseURL: process.env.REACT_APP_API_URL || \"https://localhost:3001\" })\r\n\r\nhttp.interceptors.request.use(request => {\r\n    let accessToken = localStorage.getItem(\"JPtechSolutionAccessToken\");\r\n    if (accessToken) request.headers.authorization = `Bearer ${accessToken}`\r\n    return request\r\n})\r\nhttp.interceptors.response.use(response => {\r\n    let accessToken = response.headers['authorization'];\r\n    if (accessToken) localStorage.setItem(\"JPtechSolutionAccessToken\", accessToken.split(\" \")[1])\r\n    return response\r\n})\r\n\r\nexport default http;","import React from \"react\"\r\nimport http from \"../util/axios\";\r\nexport const UserContext = React.createContext(null);\r\nconst UserProvider = (props) => {\r\n    const [user, setUser] = React.useState(null);\r\n    const [isLoading, setIsLoading] = React.useState(true);\r\n    React.useEffect(() => {\r\n        let accessToken = localStorage.getItem('JPtechSolutionAccessToken');\r\n        if (accessToken) {\r\n            http.get('/user/login', { headers: { authorization: `Bearer ${accessToken}` } })\r\n                .then(response => !response.data.error && setUser(response.data))\r\n                .finally(() => setIsLoading(false))\r\n        } else {\r\n            setIsLoading(false)\r\n        }\r\n    }, [])\r\n    if (isLoading) return <h1>Loading User</h1>\r\n    return <UserContext.Provider value={{ user, setUser, isUserLoading: isLoading, setIsUserLoading: setIsLoading }}>{props.children}</UserContext.Provider>\r\n}\r\nexport default UserProvider","import React from \"react\";\r\nimport { UserContext } from \"../../UserProvider\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { useHistory } from \"react-router\";\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\n\r\nconst UserWidget = ({ children, className, ...props }) => {\r\n    const { user, setUser } = React.useContext(UserContext);\r\n    const history = useHistory()\r\n    const handleMenuClick = (event) => {\r\n        if (!user) return history.push('/login');\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n    const handleLogoutClick = () => {\r\n        setUser(null)\r\n        localStorage.removeItem(\"JPtechSolutionAccessToken\");\r\n    }\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleMenuClose = () => setAnchorEl(null);\r\n    return (\r\n        <div  {...props}>\r\n            <IconButton onClick={handleMenuClick}>\r\n                <AccountCircleIcon />\r\n            </IconButton>\r\n            <Menu anchorEl={anchorEl} open={open} onClose={handleMenuClose}>\r\n                {user && <MenuItem onClick={handleMenuClose}>{user.username}</MenuItem>}\r\n                <MenuItem onClick={handleLogoutClick}>Logout</MenuItem>\r\n            </Menu>\r\n        </div>\r\n    )\r\n}\r\nexport default UserWidget;","import React from 'react';\r\nimport { AppContext } from '../App/AppProvider';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport UserWidget from './UserWidget';\r\nconst Header = () => {\r\n    const {setIsSidebarOpen,isSidebarOpen} = React.useContext(AppContext);\r\n    return (\r\n        <AppBar position=\"static\" color=\"primary\">\r\n            <Toolbar>\r\n                <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={()=>setIsSidebarOpen(!isSidebarOpen)}>\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Typography variant=\"h6\" >\r\n                    JPCMS\r\n                </Typography>\r\n                <UserWidget style={{marginLeft:\"auto\"}} />\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\nexport default Header;","import React from 'react';\r\nimport classes from './sidebar.module.scss';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { AppContext } from '../App/AppProvider';\r\nconst Sidebar = () => {\r\n    const { isSidebarOpen } = React.useContext(AppContext);\r\n    return (\r\n        <div className={`${classes.wrapper} ${isSidebarOpen ? classes.show : classes.hidden}`}>\r\n            <List>\r\n                <ListItem disablePadding>\r\n                    <ListItemButton>\r\n                        <ListItemText primary=\"Jobs\" />\r\n                    </ListItemButton>\r\n                </ListItem>\r\n            </List>\r\n        </div>\r\n    )\r\n}\r\nexport default Sidebar;","import React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport Select from '@mui/material/Select';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport moment from \"moment\";\r\n\r\nconst NewJobDialogBox = ({ open, handleClose, createJob, selected, updateJob, isUpdate }) => {\r\n    const [customerName, setCustomerName] = React.useState('')\r\n    const [serialNumber, setSerialNumber] = React.useState('')\r\n    const [model, setModel] = React.useState('')\r\n    const [issues, setIssues] = React.useState('')\r\n    const [brand, setBrand] = React.useState('')\r\n    const [status, setStatus] = React.useState(false);\r\n    const [amount, setAmount] = React.useState('')\r\n    const [receivedDate, setReceivedDate] = React.useState(`${moment().format(\"YYYY\")}-${moment().format(\"MM\")}-${moment().format(\"DD\")}`);\r\n    const [returnedDate, setReturnedDate] = React.useState(`${moment().format(\"YYYY\")}-${moment().format(\"MM\")}-${moment().format(\"DD\")}`);\r\n    const [detailedDescription, setDetailedDescription] = React.useState('');\r\n    const handleReceivedDateChange = (e) => setReceivedDate(e.target.value);\r\n    const handleReturnedDateChange = (e) => setReturnedDate(e.target.value);\r\n    const handleStatusChange = (e) => setStatus(e.target.value === \"resolved\" ? true : false);\r\n    const resetInputs = ()=>{\r\n        setCustomerName(\"\")\r\n        setSerialNumber(\"\")\r\n        setModel(\"\")\r\n        setIssues(\"\")\r\n        setBrand(\"\")\r\n        setStatus(\"\")\r\n        setAmount(\"\")\r\n        setReceivedDate(`${moment().format(\"YYYY\")}-${moment().format(\"MM\")}-${moment().format(\"DD\")}`)\r\n        setReturnedDate(`${moment().format(\"YYYY\")}-${moment().format(\"MM\")}-${moment().format(\"DD\")}`)\r\n        setDetailedDescription(\"\")\r\n    }\r\n    const handleSubmit = () => {\r\n        if (isUpdate) {\r\n            handleJobUpdate().then(()=>resetInputs())\r\n        } else {\r\n            handleJobCreate().then(()=>resetInputs())\r\n        }\r\n    }\r\n    const handleDialogClose = ()=>{\r\n        resetInputs();\r\n        handleClose();\r\n    }\r\n    const handleJobCreate = () => createJob({ customerName, serialNumber, model, issues, brand, status, amount, receivedDate, returnedDate, detailedDescription })\r\n    const handleJobUpdate = () => updateJob({ id: selected._id, customerName, serialNumber, model, issues, brand, status, amount, receivedDate, returnedDate, detailedDescription })\r\n    React.useEffect(() => {\r\n        if (isUpdate && selected) {\r\n            setCustomerName(selected.customerName);\r\n            setSerialNumber(selected.serialNumber);\r\n            setModel(selected.model);\r\n            setIssues(selected.issues);\r\n            setBrand(selected.brand);\r\n            setStatus(selected.status);\r\n            setAmount(selected.amount);\r\n            setReceivedDate(`${moment(selected.receivedDate).format('YYYY')}-${moment(selected.receivedDate).format(\"MM\")}-${moment(selected.receivedDate).format(\"DD\")}`);\r\n            setReturnedDate(`${moment(selected.returnedDate).format(\"YYYY\")}-${moment(selected.returnedDate).format(\"MM\")}-${moment(selected.returnedDate).format(\"DD\")}`);\r\n            setDetailedDescription(selected.detailedDescription);\r\n        }\r\n    }, [isUpdate])\r\n    return (\r\n        <Dialog open={open} onClose={ handleDialogClose}>\r\n            <div className=\"add-new-service-wrapper\">\r\n                <TextField size=\"small\" value={customerName} onChange={e => setCustomerName(e.target.value)} label=\"Customer Name\" variant=\"outlined\" />\r\n                <TextField size=\"small\" value={serialNumber} onChange={e => setSerialNumber(e.target.value)} label=\"Serial Number\" variant=\"outlined\" type=\"number\" />\r\n                <TextField size=\"small\" value={model} onChange={e => setModel(e.target.value)} label=\"Model\" variant=\"outlined\" />\r\n                <TextField size=\"small\" value={issues} onChange={e => setIssues(e.target.value)} label=\"Issues\" variant=\"outlined\" />\r\n                <TextField size=\"small\" value={brand} onChange={e => setBrand(e.target.value)} label=\"Brand\" variant=\"outlined\" />\r\n                <FormControl variant=\"outlined\" size=\"small\">\r\n                    <InputLabel id=\"demo-simple-select-outlined-label\">Status</InputLabel>\r\n                    <Select value={status === true ? \"resolved\" : \"returned\"} onChange={handleStatusChange}>\r\n                        <MenuItem value=\"resolved\">Resolved</MenuItem>\r\n                        <MenuItem value=\"returned\">Return</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <TextField size=\"small\" value={amount} onChange={e => setAmount(e.target.value)} label=\"Amount\" variant=\"outlined\" />\r\n                <TextField\r\n                    id=\"date\"\r\n                    label=\"Received Date\"\r\n                    type=\"date\"\r\n                    defaultValue={receivedDate}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={handleReceivedDateChange}\r\n                />\r\n                <TextField\r\n                    id=\"date\"\r\n                    label=\"Returned Date\"\r\n                    type=\"date\"\r\n                    defaultValue={returnedDate}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={handleReturnedDateChange}\r\n                />\r\n                <TextField value={detailedDescription} onChange={e => setDetailedDescription(e.target.value)} size=\"small\" label=\"Detailed Description\" multiline variant=\"outlined\" />\r\n                {isUpdate ? <Button onClick={handleSubmit}>Update</Button> : <Button onClick={handleSubmit}>Add New Job</Button>}\r\n            </div>\r\n        </Dialog>\r\n    )\r\n}\r\nexport default NewJobDialogBox;","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport classes from './header.module.css';\r\nconst JobHeader = ({ addNew }) => {\r\n    return (\r\n        <Box display=\"flex\" className={classes.wrapper} justifyContent=\"space-between\" alignItems=\"center\">\r\n            <h3>Jobs</h3>\r\n            <IconButton onClick={addNew} color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                <AddIcon />\r\n            </IconButton>\r\n        </Box>\r\n    )\r\n}\r\nexport default JobHeader;","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Box from '@mui/material/Box';\r\nconst SingleJobDialog = ({ open, handleClose, job, ...props }) => {\r\n    const handleDialogClose = () => {\r\n        handleClose()\r\n    }\r\n    if (!job) return null\r\n    return (\r\n        <Dialog open={open} onClose={handleDialogClose}>\r\n            <Box padding=\"30px\">\r\n                <div>\r\n                    <p>Customer name</p>\r\n                    <p style={{ fontWeight: 500 }}>{job.customerName}</p>\r\n                </div>\r\n                <div>\r\n                    <p>Model Number</p>\r\n                    <p style={{ fontWeight: 500 }}>{job.model}</p>\r\n                </div>\r\n                <div>\r\n                    <p>Received Date</p>\r\n                    <p style={{ fontWeight: 500 }}>{moment(job.receivedDate).format(\"Do MMM YY\")}</p>\r\n                </div>\r\n                <div>\r\n                    <p>Returned Date</p>\r\n                    <p style={{ fontWeight: 500 }}>{moment(job.returnedDate).format(\"Do MMM YY\")}</p>\r\n                </div>\r\n                <div>\r\n                    <p>Amount</p>\r\n                    <p style={{ fontWeight: 500 }}>{job.amount}</p>\r\n                </div>\r\n                <div>\r\n                    <p>Description</p>\r\n                    <p style={{ fontWeight: 500 }}>{job.detailedDescription}</p>\r\n                </div>\r\n            </Box>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default SingleJobDialog;","import React from 'react';\r\nexport const WindowWidthContext = React.createContext(null);\r\nconst WindowWidthProvider = ({ children }) => {\r\n    const [width, setWidth] = React.useState(null);\r\n    const handleWindowResize = () => setWidth(window.innerWidth)\r\n    React.useEffect(() => {\r\n        handleWindowResize()\r\n        window.addEventListener(\"resize\", handleWindowResize);\r\n        return () => window.removeEventListener(\"resize\", handleWindowResize)\r\n    }, [])\r\n    return (\r\n        <WindowWidthContext.Provider value={{width}}>\r\n            {children}\r\n        </WindowWidthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default WindowWidthProvider;","import React from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport classes from './table.module.scss';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { WindowWidthContext } from '../../WindowWidthProvider';\r\nimport moment from 'moment';\r\nconst JobTable = (props) => {\r\n    const { width } = React.useContext(WindowWidthContext);\r\n    const [currentRowEl, setCurrentRowEl] = React.useState(null);\r\n    const handleOptionClick = (e, job) => { setCurrentRowEl(e.target); props.selected.current = job }\r\n    const handleView = () => {\r\n        props.handleViewJob()\r\n        setCurrentRowEl(null);\r\n    }\r\n    const handleUpdate = () => {\r\n        props.handleUpdate()\r\n        setCurrentRowEl(null);\r\n    }\r\n    const handleDelete = () => {\r\n        props.handleDelete()\r\n        setCurrentRowEl(null);\r\n    }\r\n    return (\r\n        <>\r\n            <TableContainer className={`${classes.wrapper}`}>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell className={`${classes.cell} ${classes.th}`}>Customer Name</TableCell>\r\n                            {(width > 600) && <TableCell className={`${classes.cell} ${classes.th}`}>Serial Number</TableCell>}\r\n                            {(width > 600) && <TableCell className={`${classes.cell} ${classes.th}`}>Rec Date</TableCell>}\r\n                            {(width > 600) && <TableCell className={`${classes.cell} ${classes.th}`}>Ret Date</TableCell>}\r\n                            {(width > 600) && <TableCell className={`${classes.cell} ${classes.th}`}>Amount</TableCell>}\r\n                            <TableCell className={`${classes.cell} ${classes.th}`}></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {props.jobs.map((job) => (\r\n                            <TableRow key={job._id}>\r\n                                <TableCell className={classes.td} component=\"th\" scope=\"row\">{job.customerName}</TableCell>\r\n                                {console.log(width)}\r\n                                {(width > 600) && <TableCell className={`${classes.cell} ${classes.th}`}>{job.serialNumber}</TableCell>}\r\n                                {(width > 600) && <TableCell className={`${classes.cell} ${classes.th}`}>{ moment(job.receivedDate).format(\"Do MMM YY\")}</TableCell>}\r\n                                {(width > 600) && <TableCell className={`${classes.cell} ${classes.th}`}>{ moment(job.returnedDate).format(\"Do MMM YY\")}</TableCell>}\r\n                                {(width > 600) && <TableCell className={`${classes.cell} ${classes.th}`}>{job.amount}</TableCell>}\r\n                                <TableCell className={`${classes.td} ${classes.opt_cell}`} component=\"th\" scope=\"row\"><MoreVertIcon onClick={(e) => handleOptionClick(e, job)} /></TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={currentRowEl}\r\n                keepMounted\r\n                open={Boolean(currentRowEl)}\r\n                onClose={() => setCurrentRowEl(null)}\r\n            >\r\n                <MenuItem onClick={handleView}>View</MenuItem>\r\n                <MenuItem onClick={handleUpdate}>Update</MenuItem>\r\n                <MenuItem onClick={handleDelete}>Delete</MenuItem>\r\n            </Menu>\r\n        </>\r\n    )\r\n}\r\nexport default JobTable;","import React from 'react';\r\nimport http from '../util/axios';\r\nimport NewJobDialogBox from '../Job/NewJobDialogBox';\r\nimport JobHeader from './Header';\r\nimport SingleJobDialog from './SingleJobDialog';\r\nimport JobTable from './Table';\r\nconst Job = () => {\r\n    const [isUpdate, setIsUpdate] = React.useState(false)\r\n    const [newDialogIsOpen, setNewDialogBoxIsOpen] = React.useState(false)\r\n    const [singleDialogIsOpen, setSingleDialogBoxIsOpen] = React.useState(false)\r\n    const [services, setServices] = React.useState([]);\r\n    const handleNewJobDialogClose = () => {\r\n        setNewDialogBoxIsOpen(false);\r\n        if (isUpdate) setIsUpdate(false)\r\n    };\r\n    const handleNewJobDialogOpen = () => setNewDialogBoxIsOpen(true);\r\n    const handleSingleJobDialogOpen = () => setSingleDialogBoxIsOpen(true);\r\n    const handleSingleJobDialogClose = () => { setSingleDialogBoxIsOpen(false); currentSelectedJobDetails.current = null; }\r\n    const currentSelectedJobDetails = React.useRef(null);\r\n    const createJob = async (newJob) => {\r\n        let response = await http.post('/service', { ...newJob })\r\n        if (!response.error) {\r\n            handleNewJobDialogClose();\r\n            let response = await http.get('/service');\r\n            setServices(response.data.result);\r\n        }\r\n        return response;\r\n    }\r\n    const updateJob = async (updatedJob) => {\r\n        let response = await http.put('/service', { ...updatedJob })\r\n        if (!response.error) {\r\n            handleNewJobDialogClose();\r\n            let response = await http.get('/service');\r\n            setServices(response.data.result);\r\n            currentSelectedJobDetails.current = null;\r\n        }\r\n        setIsUpdate(false)\r\n        return response;\r\n    }\r\n    const deleteJob = async () => {\r\n        await http.delete(`/service/${currentSelectedJobDetails.current._id}`);\r\n        let response = await http.get('/service')\r\n        setServices(response.data.result)\r\n    }\r\n    const handleViewJob = () => {\r\n        handleSingleJobDialogOpen();\r\n    }\r\n    const handleUpdateJob = () => {\r\n        handleNewJobDialogOpen()\r\n        setIsUpdate(true)\r\n    }\r\n    const handleDeleteJob = ()=>{\r\n        deleteJob();\r\n    }\r\n    React.useEffect(() => {\r\n        http.get('/service').then(response => {\r\n            setServices(response.data.result);\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <JobHeader addNew={handleNewJobDialogOpen} />\r\n            <JobTable\r\n                jobs={services}\r\n                selected={currentSelectedJobDetails}\r\n                handleViewJob={handleViewJob}\r\n                handleUpdate={handleUpdateJob}\r\n                handleDelete={handleDeleteJob}\r\n            />\r\n            <NewJobDialogBox\r\n                open={newDialogIsOpen}\r\n                handleClose={handleNewJobDialogClose}\r\n                createJob={createJob}\r\n                updateJob={updateJob}\r\n                selected={currentSelectedJobDetails.current}\r\n                isUpdate={isUpdate}\r\n            />\r\n            <SingleJobDialog\r\n                open={singleDialogIsOpen}\r\n                handleClose={handleSingleJobDialogClose}\r\n                job={currentSelectedJobDetails.current}\r\n            />\r\n        </>\r\n    )\r\n}\r\nexport default Job;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Job from '../Job';\r\nimport classes from './content.module.css';\r\nconst Content = () => {\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Job} />\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\nexport default Content;","import Header from '../Header';\r\nimport Sidebar from '../Sidebar';\r\nimport Content from '../Content';\r\nimport React from 'react';\r\nimport { UserContext } from '../UserProvider';\r\nimport { useHistory } from 'react-router';\r\nimport AppProvider from './AppProvider';\r\nimport classes from './app.module.scss';\r\nconst App = () => {\r\n    const { user } = React.useContext(UserContext);\r\n    const history = useHistory()\r\n    React.useEffect(() => { if (!user) history.push('/login') }, [history, user])\r\n    return (\r\n        <AppProvider>\r\n            <Header />\r\n            <div className={`${classes.content_wrapper}`}>\r\n                <Sidebar />\r\n                <Content />\r\n            </div>\r\n        </AppProvider>\r\n    )\r\n}\r\nexport default App;","import React from 'react';\r\nimport { Box, Button, Paper, TextField } from \"@material-ui/core\";\r\nimport http from '../util/axios';\r\nimport { UserContext } from '../UserProvider';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst Login = () => {\r\n    const history = useHistory();\r\n    const [username, setUsername] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n    const { user, setUser } = React.useContext(UserContext);\r\n    const login = () => {\r\n        http.post('/user/login', { username, password }).then(response => {\r\n            console.log(response)\r\n            if (!response.data.error) {\r\n                setUser(response.data.user)\r\n            }\r\n        })\r\n    }\r\n    React.useEffect(() => {\r\n        if (user) history.push('/');\r\n    })\r\n    return (\r\n        <Box padding={10}>\r\n            <Paper>\r\n                <Box display=\"flex\" flexDirection=\"column\" padding={10}>\r\n                    <TextField label=\"username\" value={username} variant=\"outlined\" onChange={(e) => setUsername(e.target.value)} />\r\n                    <TextField type=\"password\" label=\"password\" value={password} variant=\"outlined\" onChange={(e) => setPassword(e.target.value)} />\r\n                    <Button onClick={login}>Login</Button>\r\n                </Box>\r\n\r\n            </Paper>\r\n        </Box>\r\n    )\r\n}\r\nexport default Login;","import { Switch, Route } from 'react-router-dom'\r\nimport App from \"./App\";\r\nimport Login from \"./Login\";\r\n\r\nconst MainRouter = () => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Route exact path=\"/\" component={App} />\r\n        </Switch>\r\n    )\r\n}\r\nexport default MainRouter;","import { createTheme } from '@mui/material/styles'\r\nexport default createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#0052cc',\r\n    },\r\n    secondary: {\r\n      main: '#edf2ff',\r\n    },\r\n  },\r\n});","import ThemeProvider from '@mui/material/styles/ThemeProvider';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport theme from './theme';\r\nconst MaterialThemeProvider = ({ children }) => {\r\n    return <ThemeProvider theme={theme}><CssBaseline />{children}</ThemeProvider>\r\n}\r\n\r\nexport default MaterialThemeProvider","import { Helmet,HelmetProvider } from \"react-helmet-async\";\r\nconst HeadProvider = ({children}) => {\r\n    return (\r\n        <HelmetProvider>\r\n                <Helmet>\r\n                    <title>CMS</title>\r\n                </Helmet>\r\n                {children}\r\n        </HelmetProvider>\r\n    )\r\n}\r\nexport default HeadProvider;","import './Root.css';\nimport SnackbarProvider from './shared/SnackbarProvider';\nimport { BrowserRouter } from 'react-router-dom';\nimport MainRouter from './route';\nimport UserProvider from './UserProvider/index';\nimport MaterialThemeProvider from './MaterialThemeProvider'\nimport HeadProvider from './HeadProvider';\nimport WindowWidthProvider from './WindowWidthProvider';\nfunction Root() {\n  return (\n    <>\n      <WindowWidthProvider>\n        <HeadProvider />\n        <MaterialThemeProvider>\n          <UserProvider>\n            <BrowserRouter>\n              <SnackbarProvider>\n                <MainRouter />\n              </SnackbarProvider>\n            </BrowserRouter>\n          </UserProvider>\n        </MaterialThemeProvider>\n      </WindowWidthProvider>\n    </>\n  );\n}\n\nexport default Root;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}