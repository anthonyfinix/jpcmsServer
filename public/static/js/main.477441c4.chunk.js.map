{"version":3,"sources":["Sidebar/sidebar.module.scss","Login/login.module.scss","Register/register.module.scss","Job/Header/header.module.css","shared/LoadingSpinner/loadingSpinner.module.scss","Job/NewJobDialogBox/newJobDialogBox.module.scss","Content/content.module.css","App/app.module.scss","Job/Table/table.module.scss","shared/SnackbarProvider/index.jsx","App/AppProvider.jsx","util/axios.js","shared/LoadingSpinner/index.jsx","UserProvider/index.jsx","Header/UserWidget/index.jsx","Header/index.jsx","Sidebar/index.jsx","Job/NewJobDialogBox/index.jsx","Job/Header/index.jsx","Job/SingleJobDialog/index.jsx","WindowWidthProvider/index.jsx","Job/Table/index.jsx","Job/api/getSearchedJobs.js","Job/index.jsx","Content/index.jsx","App/index.jsx","assets/vectors/logo.svg","Login/index.jsx","Register/index.jsx","route.jsx","MaterialThemeProvider/theme.js","MaterialThemeProvider/index.jsx","HeadProvider.jsx","Root.js","reportWebVitals.js","index.js"],"names":["module","exports","SnackbarContext","React","createContext","SnackbarProvider","props","useState","message","setMessage","Provider","value","notify","setTimeout","children","Snackbar","open","autoHideDuration","AppContext","AppProvider","isSidebarOpen","setIsSidebarOpen","http","axios","create","baseURL","process","interceptors","request","use","accessToken","localStorage","getItem","headers","authorization","response","setItem","split","LoadingSpinner","className","classes","wrapper","CircularProgress","UserContext","UserProvider","user","setUser","isLoading","setIsLoading","useEffect","get","then","data","error","finally","isUserLoading","setIsUserLoading","UserWidget","useContext","history","useHistory","anchorEl","setAnchorEl","Boolean","handleMenuClose","IconButton","onClick","event","push","currentTarget","onClose","MenuItem","username","removeItem","Header","AppBar","position","color","Toolbar","edge","Typography","variant","style","marginLeft","Sidebar","show","hidden","List","ListItem","disablePadding","ListItemButton","ListItemText","primary","NewJobDialogBox","handleClose","createJob","selected","updateJob","isUpdate","customerName","setCustomerName","customerNameError","setCustomerNameError","serialNumber","setSerialNumber","model","setModel","modelError","setModelError","issues","setIssues","issueError","setIssueError","brand","setBrand","brandError","setBrandError","status","setStatus","amount","setAmount","amountError","setAmountError","moment","format","receivedDate","setReceivedDate","returnedDate","setReturnedDate","detailedDescription","setDetailedDescription","resetInputs","handleDialogClose","handleJobCreate","handleJobUpdate","id","_id","Dialog","fullWidth","TextField","helperText","size","onChange","e","label","target","type","FormControl","InputLabel","Select","defaultValue","InputLabelProps","shrink","multiline","actionWrapper","Button","disabled","JobHeader","addNew","display","justifyContent","alignItems","addNewBtn","component","handleSearch","placeholder","SingleJobDialog","job","Box","padding","gutterBottom","WindowWidthContext","WindowWidthProvider","width","setWidth","handleWindowResize","window","innerWidth","addEventListener","removeEventListener","JobTable","scrollObserver","useRef","IntersectionObserver","entries","isIntersecting","loadMore","threshold","scrollElement","setScrollElement","currentRowEl","setCurrentRowEl","currentElement","observer","current","observe","TableContainer","Table","TableHead","TableRow","TableCell","cell","th","TableBody","jobs","map","td","scope","opt_cell","handleOptionClick","ref","class","loadingWrapper","keepMounted","handleViewJob","handleUpdate","handleDelete","getSearchedJobs","query","a","params","q","Job","services","setServices","searchTerm","setSearchTerm","searchResults","setSearchResults","page","setPage","setIsUpdate","newDialogIsOpen","setNewDialogBoxIsOpen","singleDialogIsOpen","setSingleDialogBoxIsOpen","handleNewJobDialogClose","handleNewJobDialogOpen","currentSelectedJobDetails","newJob","post","result","updatedJob","put","deleteJob","delete","currentPage","Content","exact","path","App","content_wrapper","Login","setUsername","password","setPassword","main_wrapper","brand_wrapper","src","logo","alt","Paper","Register","firstName","setFirstName","firstNameError","setFirstNameError","lastName","setLastName","lastNameError","setLastNameError","usernameError","setUsernameError","passwordError","setPasswordError","confirmPassword","setConfirmPassword","confirmPasswordError","setConfirmPasswordError","checkPasswordMatch","onBlur","MainRouter","createTheme","palette","main","secondary","MaterialThemeProvider","ThemeProvider","theme","CssBaseline","HeadProvider","Root","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.477441c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"sidebar_wrapper__15K6k\",\"hidden\":\"sidebar_hidden__gLZCh\",\"show\":\"sidebar_show__cmkqc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_wrapper\":\"login_main_wrapper__2zRST\",\"wrapper\":\"login_wrapper__1z7nw\",\"brand_wrapper\":\"login_brand_wrapper__3mkVg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_wrapper\":\"register_main_wrapper__FkePt\",\"wrapper\":\"register_wrapper__1L6WN\",\"brand_wrapper\":\"register_brand_wrapper__1dJl7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"header_wrapper__2Ks2h\",\"addNewBtn\":\"header_addNewBtn__2FaAm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"loadingSpinner_wrapper__2B9kq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actionWrapper\":\"newJobDialogBox_actionWrapper__3b_fj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"content_wrapper__3SaDL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content_wrapper\":\"app_content_wrapper__170RZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"table_wrapper__ziDrt\",\"cell\":\"table_cell__1XAhc\",\"th\":\"table_th__FPD0d\",\"td\":\"table_td__27OyA\",\"opt_cell\":\"table_opt_cell__xQNra\",\"loadingWrapper\":\"table_loadingWrapper__3dI4T\"};","import { Snackbar } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nexport const SnackbarContext = React.createContext(\"\");\r\nconst SnackbarProvider = (props) => {\r\n    const [message, setMessage] = React.useState(\"\");\r\n    const notify = (message) => {\r\n        setMessage(message);\r\n        setTimeout(() => setMessage(\"\"), 7000)\r\n    }\r\n    return (\r\n        <SnackbarContext.Provider value={{ notify }}>\r\n            {props.children}\r\n            <Snackbar open={!!message} autoHideDuration={6000} message={message} />\r\n        </SnackbarContext.Provider>\r\n    )\r\n}\r\nexport default SnackbarProvider;","import React from \"react\";\r\n\r\nexport const AppContext = React.createContext({});\r\nconst AppProvider = ({ children }) => {\r\n    const [isSidebarOpen, setIsSidebarOpen] = React.useState(false);\r\n    return <AppContext.Provider value={{ isSidebarOpen, setIsSidebarOpen }}>{children}</AppContext.Provider>\r\n}\r\nexport default AppProvider;","import axios from \"axios\";\r\nconst http = axios.create({ baseURL: process.env.REACT_APP_API_URL || \"http://localhost:8080\" })\r\n\r\nhttp.interceptors.request.use(request => {\r\n    let accessToken = localStorage.getItem(\"JPtechSolutionAccessToken\");\r\n    if (accessToken) request.headers.authorization = `Bearer ${accessToken}`\r\n    return request\r\n})\r\nhttp.interceptors.response.use(response => {\r\n    let accessToken = response.headers['authorization'];\r\n    if (accessToken) localStorage.setItem(\"JPtechSolutionAccessToken\", accessToken.split(\" \")[1])\r\n    return response\r\n})\r\n\r\nexport default http;","import CircularProgress from '@mui/material/CircularProgress';\r\nimport classes from './loadingSpinner.module.scss';\r\nconst LoadingSpinner = () => {\r\n    return (\r\n        <div className={`${classes.wrapper}`}>\r\n            <CircularProgress />\r\n        </div>\r\n    )\r\n}\r\nexport default LoadingSpinner;","import React from \"react\"\r\nimport http from \"../util/axios\";\r\nimport LoadingSpinner from '../shared/LoadingSpinner';\r\nexport const UserContext = React.createContext(null);\r\nconst UserProvider = (props) => {\r\n    const [user, setUser] = React.useState(null);\r\n    const [isLoading, setIsLoading] = React.useState(true);\r\n    React.useEffect(() => {\r\n        let accessToken = localStorage.getItem('JPtechSolutionAccessToken');\r\n        if (accessToken) {\r\n            http.get('/user/login', { headers: { authorization: `Bearer ${accessToken}` } })\r\n                .then(response => !response.data.error && setUser(response.data))\r\n                .finally(() => setIsLoading(false))\r\n        } else {\r\n            setIsLoading(false)\r\n        }\r\n    }, [])\r\n    if (isLoading) return <LoadingSpinner/>\r\n    return <UserContext.Provider value={{ user, setUser, isUserLoading: isLoading, setIsUserLoading: setIsLoading }}>{props.children}</UserContext.Provider>\r\n}\r\nexport default UserProvider","import React from \"react\";\r\nimport { UserContext } from \"../../UserProvider\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { useHistory } from \"react-router\";\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\n\r\nconst UserWidget = ({ children, className, ...props }) => {\r\n    const { user, setUser } = React.useContext(UserContext);\r\n    const history = useHistory()\r\n    const handleMenuClick = (event) => {\r\n        if (!user) return history.push('/login');\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n    const handleLogoutClick = () => {\r\n        setUser(null)\r\n        localStorage.removeItem(\"JPtechSolutionAccessToken\");\r\n    }\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleMenuClose = () => setAnchorEl(null);\r\n    return (\r\n        <div  {...props}>\r\n            <IconButton onClick={handleMenuClick}>\r\n                <AccountCircleIcon />\r\n            </IconButton>\r\n            <Menu anchorEl={anchorEl} open={open} onClose={handleMenuClose}>\r\n                {user && <MenuItem onClick={handleMenuClose}>{user.username}</MenuItem>}\r\n                <MenuItem onClick={handleLogoutClick}>Logout</MenuItem>\r\n            </Menu>\r\n        </div>\r\n    )\r\n}\r\nexport default UserWidget;","import React from 'react';\r\nimport { AppContext } from '../App/AppProvider';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport UserWidget from './UserWidget';\r\nconst Header = () => {\r\n    const {setIsSidebarOpen,isSidebarOpen} = React.useContext(AppContext);\r\n    return (\r\n        <AppBar position=\"static\" color=\"primary\">\r\n            <Toolbar>\r\n                <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={()=>setIsSidebarOpen(!isSidebarOpen)}>\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Typography variant=\"h6\" >\r\n                    JPCMS\r\n                </Typography>\r\n                <UserWidget style={{marginLeft:\"auto\"}} />\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\nexport default Header;","import React from 'react';\r\nimport classes from './sidebar.module.scss';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { AppContext } from '../App/AppProvider';\r\nconst Sidebar = () => {\r\n    const { isSidebarOpen } = React.useContext(AppContext);\r\n    return (\r\n        <div className={`${classes.wrapper} ${isSidebarOpen ? classes.show : classes.hidden}`}>\r\n            <List>\r\n                <ListItem disablePadding>\r\n                    <ListItemButton>\r\n                        <ListItemText primary=\"Jobs\" />\r\n                    </ListItemButton>\r\n                </ListItem>\r\n            </List>\r\n        </div>\r\n    )\r\n}\r\nexport default Sidebar;","import React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport Select from '@mui/material/Select';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport moment from \"moment\";\r\nimport classes from './newJobDialogBox.module.scss'\r\n\r\nconst NewJobDialogBox = ({ open, handleClose, createJob, selected, updateJob, isUpdate }) => {\r\n    // customer\r\n    const [customerName, setCustomerName] = React.useState('');\r\n    const [customerNameError, setCustomerNameError] = React.useState(\"\")\r\n    const handleCustomerNameChange = (e) => {\r\n        let value = e.currentTarget.value;\r\n        (value === \"\") ? setCustomerNameError(\"Should not be empty\") : setCustomerNameError(\"\");\r\n        setCustomerName(value);\r\n    }\r\n    const [serialNumber, setSerialNumber] = React.useState('');\r\n    // model\r\n    const [model, setModel] = React.useState('')\r\n    const [modelError, setModelError] = React.useState('')\r\n    const handleModelChange = (e) => {\r\n        let value = e.currentTarget.value;\r\n        (value === \"\") ? setModelError(\"Should not be empty\") : setModelError(\"\");\r\n        setModel(value);\r\n    }\r\n    // issue\r\n    const [issues, setIssues] = React.useState('')\r\n    const [issueError, setIssueError] = React.useState('')\r\n    const handleIssueChange = (e) => {\r\n        let value = e.currentTarget.value;\r\n        (value === \"\") ? setIssueError(\"Should not be empty\") : setIssueError(\"\");\r\n        setIssues(value);\r\n    }\r\n    // brand\r\n    const [brand, setBrand] = React.useState('')\r\n    const [brandError, setBrandError] = React.useState('')\r\n    const handleBrandChange = (e) => {\r\n        let value = e.currentTarget.value;\r\n        (value === \"\") ? setBrandError(\"Should not be empty\") : setBrandError(\"\");\r\n        setBrand(value);\r\n    }\r\n    //status\r\n    const [status, setStatus] = React.useState(false);\r\n    const handleStatusChange = (e) => {\r\n        let value = e.target.value;\r\n        if (value === 'resolved') return setStatus(true)\r\n        setStatus(false)\r\n    };\r\n    // amount\r\n    const [amount, setAmount] = React.useState('')\r\n    const [amountError, setAmountError] = React.useState('')\r\n    const handleAmountChange = (e) => {\r\n        let value = e.currentTarget.value;\r\n        (value === \"\") ? setAmountError(\"Should not be empty\") : setAmountError(\"\");\r\n        setAmount(value);\r\n    }\r\n    const [receivedDate, setReceivedDate] = React.useState(`${moment().format(\"YYYY\")}-${moment().format(\"MM\")}-${moment().format(\"DD\")}`);\r\n    const [returnedDate, setReturnedDate] = React.useState(`${moment().format(\"YYYY\")}-${moment().format(\"MM\")}-${moment().format(\"DD\")}`);\r\n    const [detailedDescription, setDetailedDescription] = React.useState('');\r\n    const handleReceivedDateChange = (e) => setReceivedDate(e.target.value);\r\n    const handleReturnedDateChange = (e) => setReturnedDate(e.target.value);\r\n    const resetInputs = () => {\r\n        setCustomerName(\"\")\r\n        setSerialNumber(\"\")\r\n        setModel(\"\")\r\n        setIssues(\"\")\r\n        setBrand(\"\")\r\n        setStatus(false)\r\n        setAmount(\"\")\r\n        setReceivedDate(`${moment().format(\"YYYY\")}-${moment().format(\"MM\")}-${moment().format(\"DD\")}`)\r\n        setReturnedDate(`${moment().format(\"YYYY\")}-${moment().format(\"MM\")}-${moment().format(\"DD\")}`)\r\n        setDetailedDescription(\"\")\r\n    }\r\n    const handleSubmit = () => {\r\n        if (isUpdate) {\r\n            handleJobUpdate().then(() => resetInputs())\r\n        } else {\r\n            handleJobCreate().then(() => resetInputs())\r\n        }\r\n    }\r\n    const handleDialogClose = () => {\r\n        resetInputs();\r\n        handleClose();\r\n    }\r\n    const handleJobCreate = () => createJob({ customerName, serialNumber, model, issues, brand, status, amount, receivedDate, returnedDate, detailedDescription });\r\n    const handleJobUpdate = () => updateJob({ id: selected._id, customerName, serialNumber, model, issues, brand, status, amount, receivedDate, returnedDate, detailedDescription });\r\n    React.useEffect(() => {\r\n        if (isUpdate && selected) {\r\n            setCustomerName(selected.customerName);\r\n            setSerialNumber(selected.serialNumber);\r\n            setModel(selected.model);\r\n            setIssues(selected.issues);\r\n            setBrand(selected.brand);\r\n            setStatus(selected.status);\r\n            setAmount(selected.amount);\r\n            setReceivedDate(`${moment(selected.receivedDate).format('YYYY')}-${moment(selected.receivedDate).format(\"MM\")}-${moment(selected.receivedDate).format(\"DD\")}`);\r\n            setReturnedDate(`${moment(selected.returnedDate).format(\"YYYY\")}-${moment(selected.returnedDate).format(\"MM\")}-${moment(selected.returnedDate).format(\"DD\")}`);\r\n            setDetailedDescription(selected.detailedDescription);\r\n        }\r\n    }, [isUpdate])\r\n    return (\r\n        <Dialog open={open} fullWidth={true} onClose={handleDialogClose}>\r\n            <div className=\"add-new-service-wrapper\">\r\n                <TextField\r\n                    error={!!customerNameError}\r\n                    helperText={customerNameError}\r\n                    size=\"small\"\r\n                    value={customerName}\r\n                    onChange={handleCustomerNameChange}\r\n                    label=\"Customer Name\"\r\n                    variant=\"outlined\"\r\n                />\r\n                <TextField size=\"small\" value={serialNumber} onChange={e => setSerialNumber(e.target.value)} label=\"Serial Number\" variant=\"outlined\" type=\"number\" />\r\n                <TextField error={!!modelError} helperText={modelError} size=\"small\" value={model} onChange={handleModelChange} label=\"Model\" variant=\"outlined\" />\r\n                <TextField error={!!issueError} helperText={issueError} size=\"small\" value={issues} onChange={handleIssueChange} label=\"Issues\" variant=\"outlined\" />\r\n                <TextField error={!!brandError} helperText={brandError} size=\"small\" value={brand} onChange={handleBrandChange} label=\"Brand\" variant=\"outlined\" />\r\n                <FormControl variant=\"outlined\" size=\"small\">\r\n                    <InputLabel id=\"demo-simple-select-outlined-label\">Status</InputLabel>\r\n                    <Select value={status === true ? \"resolved\" : \"returned\"} onChange={handleStatusChange}>\r\n                        <MenuItem value=\"resolved\">Resolved</MenuItem>\r\n                        <MenuItem value=\"returned\">Return</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <TextField\r\n                    error={!!amountError}\r\n                    helperText={amountError}\r\n                    type=\"number\"\r\n                    size=\"small\"\r\n                    value={amount}\r\n                    onChange={handleAmountChange}\r\n                    label=\"Amount\"\r\n                    variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                    id=\"date\"\r\n                    label=\"Received Date\"\r\n                    type=\"date\"\r\n                    defaultValue={receivedDate}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={handleReceivedDateChange}\r\n                />\r\n                <TextField\r\n                    id=\"date\"\r\n                    label=\"Returned Date\"\r\n                    type=\"date\"\r\n                    defaultValue={returnedDate}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={handleReturnedDateChange}\r\n                />\r\n                <TextField value={detailedDescription} onChange={e => setDetailedDescription(e.target.value)} size=\"small\" label=\"Detailed Description\" multiline variant=\"outlined\" />\r\n                <div className={classes.actionWrapper}>\r\n                    <Button onClick={handleDialogClose}> Close </Button>\r\n                    <Button\r\n                        disabled={modelError || customerNameError || issueError || amountError}\r\n                        variant=\"contained\"\r\n                        onClick={handleSubmit}>\r\n                        {isUpdate ? \"Update\" : \"Add New Job\"}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n}\r\nexport default NewJobDialogBox;","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport classes from './header.module.css';\r\nimport TextField from '@mui/material/TextField';\r\nconst JobHeader = ({ addNew,...props }) => {\r\n    return (\r\n        <div display=\"flex\" className={classes.wrapper} justifyContent=\"space-between\" alignItems=\"center\">\r\n            <h3>Jobs</h3>\r\n            <div className={`${classes.addNewBtn}`}>\r\n                <IconButton onClick={addNew} color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                    <AddIcon />\r\n                </IconButton>\r\n            </div>\r\n            <TextField onChange={props.handleSearch} placeholder=\"search\" size=\"small\" variant=\"outlined\" />\r\n        </div>\r\n    )\r\n}\r\nexport default JobHeader;","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nconst SingleJobDialog = ({ open, handleClose, job, ...props }) => {\r\n    const handleDialogClose = () => {\r\n        handleClose()\r\n    }\r\n    if (!job) return null\r\n    return (\r\n        <Dialog open={open} fullWidth={true} onClose={handleDialogClose}>\r\n            <Box padding=\"30px\">\r\n                <div>\r\n                    <Typography variant=\"overline\" display=\"block\" gutterBottom>Customer name</Typography>\r\n                    <Typography variant=\"h6\" gutterBottom component=\"div\">{job.customerName}</Typography>\r\n                </div>\r\n                <div>\r\n                    <Typography variant=\"overline\" display=\"block\" gutterBottom>Model Number</Typography>\r\n                    <Typography variant=\"h6\" gutterBottom component=\"div\">{job.model}</Typography>\r\n                </div>\r\n                <div>\r\n                    <Typography variant=\"overline\" display=\"block\" gutterBottom>Received Date</Typography>\r\n                    <Typography variant=\"h6\" gutterBottom component=\"div\">{moment(job.receivedDate).format(\"Do MMM YY\")}</Typography>\r\n                </div>\r\n                <div>\r\n                    <Typography variant=\"overline\" display=\"block\" gutterBottom>Returned Date</Typography>\r\n                    <Typography variant=\"h6\" gutterBottom component=\"div\">{moment(job.returnedDate).format(\"Do MMM YY\")}</Typography>\r\n                </div>\r\n                <div>\r\n                <Typography variant=\"overline\" display=\"block\" gutterBottom>Amount</Typography>\r\n                <Typography variant=\"h6\" gutterBottom component=\"div\">{job.amount}</Typography>\r\n                </div>\r\n                <div>\r\n                <Typography variant=\"overline\" display=\"block\" gutterBottom>Description</Typography>\r\n                <Typography variant=\"h6\" gutterBottom component=\"div\">{job.detailedDescription}</Typography>\r\n                </div>\r\n            </Box>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default SingleJobDialog;","import React from 'react';\r\nexport const WindowWidthContext = React.createContext(null);\r\nconst WindowWidthProvider = ({ children }) => {\r\n    const [width, setWidth] = React.useState(null);\r\n    const handleWindowResize = () => setWidth(window.innerWidth)\r\n    React.useEffect(() => {\r\n        handleWindowResize()\r\n        window.addEventListener(\"resize\", handleWindowResize);\r\n        return () => window.removeEventListener(\"resize\", handleWindowResize)\r\n    }, [])\r\n    return (\r\n        <WindowWidthContext.Provider value={{width}}>\r\n            {children}\r\n        </WindowWidthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default WindowWidthProvider;","import React from 'react';\r\nimport moment from 'moment';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport classes from './table.module.scss';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport LoadingSpinner from '../../shared/LoadingSpinner';\r\nimport { WindowWidthContext } from '../../WindowWidthProvider';\r\n\r\nconst JobTable = (props) => {\r\n    const handleOnScrollEnd = (entry) => entry.isIntersecting && !props.isLoading && props.loadMore();\r\n    const scrollObserver = React.useRef(new IntersectionObserver((entries) => handleOnScrollEnd(entries[0]), { threshold: 1 }))\r\n    const [scrollElement, setScrollElement] = React.useState(null);\r\n    const { width } = React.useContext(WindowWidthContext);\r\n    const [currentRowEl, setCurrentRowEl] = React.useState(null);\r\n    const handleOptionClick = (e, job) => { setCurrentRowEl(e.target); props.selected.current = job }\r\n    const handleView = () => {\r\n        props.handleViewJob()\r\n        setCurrentRowEl(null);\r\n    }\r\n    const handleUpdate = () => {\r\n        props.handleUpdate()\r\n        setCurrentRowEl(null);\r\n    }\r\n    const handleDelete = () => {\r\n        props.handleDelete()\r\n        setCurrentRowEl(null);\r\n    }\r\n    React.useEffect(() => {\r\n        let currentElement = scrollElement;\r\n        let observer = scrollObserver.current;\r\n        if (currentElement) observer.observe(currentElement);\r\n    }, [scrollElement])\r\n    return (\r\n        <>\r\n            <TableContainer className={`${classes.wrapper}`}>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell className={`${classes.cell} ${classes.th}`}>Customer Name</TableCell>\r\n                            {(width > 600) && <TableCell className={`${classes.cell} ${classes.th}`}>Serial Number</TableCell>}\r\n                            {(width > 600) && <TableCell className={`${classes.cell} ${classes.th}`}>Rec Date</TableCell>}\r\n                            {(width > 600) && <TableCell className={`${classes.cell} ${classes.th}`}>Ret Date</TableCell>}\r\n                            {(width > 600) && <TableCell className={`${classes.cell} ${classes.th}`}>Amount</TableCell>}\r\n                            <TableCell className={`${classes.cell} ${classes.th}`}></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {props.jobs.map((job) => (\r\n                            <TableRow key={job._id}>\r\n                                <TableCell className={classes.td} component=\"th\" scope=\"row\">{job.customerName}</TableCell>\r\n                                {(width > 600) && <TableCell className={`${classes.cell} ${classes.th}`}>{job.serialNumber}</TableCell>}\r\n                                {(width > 600) && <TableCell className={`${classes.cell} ${classes.th}`}>{moment(job.receivedDate).format(\"Do MMM YY\")}</TableCell>}\r\n                                {(width > 600) && <TableCell className={`${classes.cell} ${classes.th}`}>{moment(job.returnedDate).format(\"Do MMM YY\")}</TableCell>}\r\n                                {(width > 600) && <TableCell className={`${classes.cell} ${classes.th}`}>{job.amount}</TableCell>}\r\n                                <TableCell className={`${classes.td} ${classes.opt_cell}`} component=\"th\" scope=\"row\"><MoreVertIcon onClick={(e) => handleOptionClick(e, job)} /></TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n                <div ref={setScrollElement} class={`${classes.loadingWrapper}`}> {props.isLoading && <LoadingSpinner />} </div>\r\n            </TableContainer>\r\n\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={currentRowEl}\r\n                keepMounted\r\n                open={Boolean(currentRowEl)}\r\n                onClose={() => setCurrentRowEl(null)}\r\n            >\r\n                <MenuItem onClick={handleView}>View</MenuItem>\r\n                <MenuItem onClick={handleUpdate}>Update</MenuItem>\r\n                <MenuItem onClick={handleDelete}>Delete</MenuItem>\r\n            </Menu>\r\n        </>\r\n    )\r\n}\r\nexport default JobTable;","import http from '../../util/axios';\r\nconst getSearchedJobs = async (query) => {\r\n    try {\r\n        return await http.get(\"/service/search\", { params: { q: query } })\r\n    } catch (e) {\r\n        return { error: e }\r\n    }\r\n}\r\nexport default getSearchedJobs;","import React from 'react';\r\nimport http from '../util/axios';\r\nimport NewJobDialogBox from '../Job/NewJobDialogBox';\r\nimport JobHeader from './Header';\r\nimport SingleJobDialog from './SingleJobDialog';\r\nimport JobTable from './Table';\r\nimport getSearchedJobs from './api/getSearchedJobs';\r\nconst Job = () => {\r\n    const [services, setServices] = React.useState([]);\r\n    const [searchTerm, setSearchTerm] = React.useState(\"\");\r\n    const handleSearchInputChange = (e) => setSearchTerm(e.currentTarget.value);\r\n    const [searchResults, setSearchResults] = React.useState([]);\r\n    const [isLoading, setIsLoading] = React.useState(false);\r\n    const [page, setPage] = React.useState(1);\r\n    const loadMoreJobs = () => setPage(currentPage => currentPage + 1);\r\n    const [isUpdate, setIsUpdate] = React.useState(false)\r\n    const [newDialogIsOpen, setNewDialogBoxIsOpen] = React.useState(false)\r\n    const [singleDialogIsOpen, setSingleDialogBoxIsOpen] = React.useState(false)\r\n    const handleNewJobDialogClose = () => {\r\n        setNewDialogBoxIsOpen(false);\r\n        if (isUpdate) setIsUpdate(false)\r\n    };\r\n    const handleNewJobDialogOpen = () => setNewDialogBoxIsOpen(true);\r\n    const handleSingleJobDialogOpen = () => setSingleDialogBoxIsOpen(true);\r\n    const handleSingleJobDialogClose = () => { setSingleDialogBoxIsOpen(false); currentSelectedJobDetails.current = null; }\r\n    const currentSelectedJobDetails = React.useRef(null);\r\n    const createJob = async (newJob) => {\r\n        let response = await http.post('/service', { ...newJob })\r\n        if (!response.error) {\r\n            handleNewJobDialogClose();\r\n            let response = await http.get('/service');\r\n            setServices(response.data.result);\r\n            currentSelectedJobDetails.current = null;\r\n        }\r\n        return response;\r\n    }\r\n    const updateJob = async (updatedJob) => {\r\n        let response = await http.put('/service', { ...updatedJob })\r\n        if (!response.error) {\r\n            handleNewJobDialogClose();\r\n            let response = await http.get('/service');\r\n            setServices(response.data.result);\r\n            currentSelectedJobDetails.current = null;\r\n        }\r\n        return response;\r\n    }\r\n    const deleteJob = async () => {\r\n        await http.delete(`/service/${currentSelectedJobDetails.current._id}`);\r\n        let response = await http.get('/service')\r\n        setServices(response.data.result)\r\n    }\r\n    const handleViewJob = () => {\r\n        handleSingleJobDialogOpen();\r\n    }\r\n    const handleUpdateJob = () => {\r\n        handleNewJobDialogOpen()\r\n        setIsUpdate(true)\r\n    }\r\n    const handleDeleteJob = () => {\r\n        deleteJob();\r\n    }\r\n    React.useEffect(() => {\r\n        getSearchedJobs(searchTerm)\r\n            .then(response => setSearchResults(response.data.result))\r\n    }, [searchTerm])\r\n    React.useEffect(() => {\r\n        setIsLoading(true);\r\n        http.get('/service', { params: { page } })\r\n            .then(response => {\r\n                setIsLoading(false);\r\n                setServices((services) => [...services, ...response.data.result])\r\n            })\r\n    }, [page])\r\n    React.useEffect(() => {\r\n        setIsLoading(true);\r\n        http.get('/service', { params: { page } })\r\n            .then(response => {\r\n                setIsLoading(false);\r\n                setServices(response.data.result);\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <JobHeader\r\n                addNew={handleNewJobDialogOpen}\r\n                handleSearch={handleSearchInputChange}\r\n            />\r\n            <JobTable\r\n                jobs={searchTerm ? searchResults : services}\r\n                selected={currentSelectedJobDetails}\r\n                handleViewJob={handleViewJob}\r\n                handleUpdate={handleUpdateJob}\r\n                handleDelete={handleDeleteJob}\r\n                loadMore={loadMoreJobs}\r\n                isLoading={isLoading}\r\n            />\r\n            <NewJobDialogBox\r\n                open={newDialogIsOpen}\r\n                handleClose={handleNewJobDialogClose}\r\n                createJob={createJob}\r\n                updateJob={updateJob}\r\n                selected={currentSelectedJobDetails.current}\r\n                isUpdate={isUpdate}\r\n            />\r\n            <SingleJobDialog\r\n                open={singleDialogIsOpen}\r\n                handleClose={handleSingleJobDialogClose}\r\n                job={currentSelectedJobDetails.current}\r\n            />\r\n        </>\r\n    )\r\n}\r\nexport default Job;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Job from '../Job';\r\nimport classes from './content.module.css';\r\nconst Content = () => {\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Job} />\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\nexport default Content;","import Header from '../Header';\r\nimport Sidebar from '../Sidebar';\r\nimport Content from '../Content';\r\nimport React from 'react';\r\nimport { UserContext } from '../UserProvider';\r\nimport { useHistory } from 'react-router';\r\nimport AppProvider from './AppProvider';\r\nimport classes from './app.module.scss';\r\nconst App = () => {\r\n    const { user } = React.useContext(UserContext);\r\n    const history = useHistory()\r\n    React.useEffect(() => { if (!user) history.push('/login') }, [history, user])\r\n    return (\r\n        <AppProvider>\r\n            <Header />\r\n            <div className={`${classes.content_wrapper}`}>\r\n                <Sidebar />\r\n                <Content />\r\n            </div>\r\n        </AppProvider>\r\n    )\r\n}\r\nexport default App;","export default __webpack_public_path__ + \"static/media/logo.c42e8372.svg\";","import React from 'react';\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport http from '../util/axios';\r\nimport { UserContext } from '../UserProvider';\r\nimport { useHistory } from 'react-router';\r\nimport classes from './login.module.scss';\r\nimport logo from '../assets/vectors/logo.svg';\r\nimport { SnackbarContext } from '../shared/SnackbarProvider';\r\n\r\nconst Login = () => {\r\n    const history = useHistory();\r\n    const { notify } = React.useContext(SnackbarContext);\r\n    const [username, setUsername] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n    const { user, setUser } = React.useContext(UserContext);\r\n    const login = () => {\r\n        http.post('/user/login', { username, password })\r\n            .then(response => {\r\n                if (response.data.error) notify(response.data.error)\r\n                !response.data.error && setUser(response.data.user)\r\n            })\r\n    }\r\n    React.useEffect(() => {\r\n        if (user) history.push('/');\r\n    })\r\n    return (\r\n        <Box className={`${classes.main_wrapper} m-md`}>\r\n            <div className={`${classes.brand_wrapper}`}>\r\n                <img src={`${logo}`} alt=\"logo\" />\r\n                <Typography>Catalog</Typography>\r\n            </div>\r\n            <Paper className={classes.wrapper}>\r\n                <TextField\r\n                    size=\"small\"\r\n                    label=\"username\"\r\n                    value={username}\r\n                    variant=\"outlined\"\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                />\r\n                <TextField\r\n                    size=\"small\"\r\n                    type=\"password\"\r\n                    label=\"password\"\r\n                    value={password}\r\n                    variant=\"outlined\"\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <Button variant=\"contained\" onClick={login}>Login</Button>\r\n                <p onClick={() => history.push('/register')}>Register?</p>\r\n            </Paper>\r\n        </Box>\r\n    )\r\n}\r\nexport default Login;","import React from 'react';\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport http from '../util/axios';\r\nimport { UserContext } from '../UserProvider';\r\nimport { useHistory } from 'react-router';\r\nimport classes from './register.module.scss';\r\nimport logo from '../assets/vectors/logo.svg';\r\nimport { SnackbarContext } from '../shared/SnackbarProvider';\r\n\r\nconst Register = () => {\r\n    const history = useHistory();\r\n    const { notify } = React.useContext(SnackbarContext);\r\n    const [firstName, setFirstName] = React.useState(\"\");\r\n    const [firstNameError, setFirstNameError] = React.useState(\"\");\r\n    const handleFirstNameChange = (e) => {\r\n        let value = e.currentTarget.value;\r\n        setFirstName(value);\r\n        (value === \"\") ? setFirstNameError(\"Should not be empty\") : setFirstNameError(\"\")\r\n    }\r\n    const [lastName, setLastName] = React.useState(\"\");\r\n    const [lastNameError, setLastNameError] = React.useState(\"\");\r\n    const handleLastNameChange = (e) => {\r\n        let value = e.currentTarget.value;\r\n        setLastName(value);\r\n        (value === \"\") ? setLastNameError(\"Should not be empty\") : setLastNameError(\"\")\r\n    }\r\n    const [username, setUsername] = React.useState('');\r\n    const [usernameError, setUsernameError] = React.useState(\"\");\r\n    const handleUsernameChange = (e) => {\r\n        let value = e.currentTarget.value;\r\n        setUsername(value);\r\n        setUsername(value);\r\n        (value === \"\") ? setUsernameError(\"Should not be empty\") : setUsernameError(\"\")\r\n    }\r\n    const [password, setPassword] = React.useState('');\r\n    const [passwordError, setPasswordError] = React.useState(\"\");\r\n    const handlePasswordChange = (e) => {\r\n        let value = e.currentTarget.value;\r\n        setPassword(value);\r\n        (value === \"\") ? setPasswordError(\"Should not be empty\") : setPasswordError(\"\")\r\n    }\r\n    const [confirmPassword, setConfirmPassword] = React.useState('');\r\n    const [confirmPasswordError, setConfirmPasswordError] = React.useState(\"\");\r\n    const handleConfirmPasswordChange = (e) => {\r\n        let value = e.currentTarget.value;\r\n        setConfirmPassword(value);\r\n        (value === \"\") ? setConfirmPasswordError(\"Should not be empty\") : setConfirmPasswordError(\"\")\r\n    }\r\n    const { user, setUser } = React.useContext(UserContext);\r\n    const register = () => {\r\n        http.post('/user/register', { firstName, lastName, username, password, confirmPassword })\r\n            .then(response => {\r\n                if (response.data.error) notify(response.data.error)\r\n                !response.data.error && history.push('/login')\r\n            })\r\n    }\r\n    const checkPasswordMatch = () => {\r\n        if ((password !== \"\") || (confirmPassword !== \"\")) {\r\n            if (password !== confirmPassword) {\r\n                setPasswordError(\"Password does not match\")\r\n                setConfirmPasswordError(\"Password does not match\")\r\n            }\r\n            if (password === confirmPassword) {\r\n                if (passwordError === \"Password does not match\") setPasswordError(\"\");\r\n                if (confirmPasswordError === \"Password does not match\") setConfirmPasswordError(\"\");\r\n            }\r\n        }\r\n        if (((password !== \"\") || (confirmPassword !== \"\")) && (password !== confirmPassword)) {\r\n            setPasswordError(\"Password does not match\")\r\n            setConfirmPassword(\"Password does not match\")\r\n        }\r\n    }\r\n    React.useEffect(() => {\r\n        if (user) history.push('/');\r\n    })\r\n    return (\r\n        <Box className={`${classes.main_wrapper} m-md`}>\r\n            <div className={`${classes.brand_wrapper}`}>\r\n                <img src={`${logo}`} alt=\"logo\" />\r\n                <Typography>Catalog</Typography>\r\n            </div>\r\n            <Paper className={classes.wrapper}>\r\n                <TextField\r\n                    error={!!firstNameError}\r\n                    helperText={firstNameError}\r\n                    size=\"small\"\r\n                    label=\"first Name\"\r\n                    value={firstName}\r\n                    variant=\"outlined\"\r\n                    onChange={handleFirstNameChange}\r\n                />\r\n                <TextField\r\n                    error={!!lastNameError}\r\n                    helperText={lastNameError}\r\n                    size=\"small\"\r\n                    label=\"Last Name\"\r\n                    value={lastName}\r\n                    variant=\"outlined\"\r\n                    onChange={handleLastNameChange}\r\n                />\r\n                <TextField\r\n                    error={!!usernameError}\r\n                    helperText={usernameError}\r\n                    size=\"small\"\r\n                    label=\"username\"\r\n                    value={username}\r\n                    variant=\"outlined\"\r\n                    onChange={handleUsernameChange}\r\n                />\r\n                <TextField\r\n                    error={!!passwordError}\r\n                    helperText={passwordError}\r\n                    size=\"small\"\r\n                    type=\"password\"\r\n                    label=\"password\"\r\n                    value={password}\r\n                    variant=\"outlined\"\r\n                    onChange={handlePasswordChange}\r\n                    onBlur={checkPasswordMatch}\r\n                />\r\n                <TextField\r\n                    error={!!confirmPasswordError}\r\n                    helperText={confirmPasswordError}\r\n                    size=\"small\"\r\n                    type=\"password\"\r\n                    label=\"Confirm Password\"\r\n                    value={confirmPassword}\r\n                    variant=\"outlined\"\r\n                    onChange={handleConfirmPasswordChange}\r\n                    onBlur={checkPasswordMatch}\r\n                />\r\n                <Button variant=\"contained\" onClick={register}>Register</Button>\r\n                <p onClick={() => history.push('/login')}>login ?</p>\r\n            </Paper>\r\n        </Box>\r\n    )\r\n}\r\nexport default Register;","import { Switch, Route } from 'react-router-dom'\r\nimport App from \"./App\";\r\nimport Login from \"./Login\";\r\nimport Register from './Register';\r\n\r\nconst MainRouter = () => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Route exact path=\"/register\" component={Register} />\r\n            <Route exact path=\"/\" component={App} />\r\n        </Switch>\r\n    )\r\n}\r\nexport default MainRouter;","import { createTheme } from '@mui/material/styles'\r\nexport default createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#0052cc',\r\n    },\r\n    secondary: {\r\n      main: '#edf2ff',\r\n    },\r\n  },\r\n});","import ThemeProvider from '@mui/material/styles/ThemeProvider';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport theme from './theme';\r\nconst MaterialThemeProvider = ({ children }) => {\r\n    return <ThemeProvider theme={theme}><CssBaseline />{children}</ThemeProvider>\r\n}\r\n\r\nexport default MaterialThemeProvider","import { Helmet,HelmetProvider } from \"react-helmet-async\";\r\nconst HeadProvider = ({children}) => {\r\n    return (\r\n        <HelmetProvider>\r\n                <Helmet>\r\n                    <title>CMS</title>\r\n                </Helmet>\r\n                {children}\r\n        </HelmetProvider>\r\n    )\r\n}\r\nexport default HeadProvider;","import './Root.css';\r\nimport SnackbarProvider from './shared/SnackbarProvider';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport MainRouter from './route';\r\nimport UserProvider from './UserProvider/index';\r\nimport MaterialThemeProvider from './MaterialThemeProvider'\r\nimport HeadProvider from './HeadProvider';\r\nimport WindowWidthProvider from './WindowWidthProvider';\r\nfunction Root() {\r\n  return (\r\n    <>\r\n      <WindowWidthProvider>\r\n        <HeadProvider />\r\n        <MaterialThemeProvider>\r\n          <UserProvider>\r\n            <BrowserRouter>\r\n              <SnackbarProvider>\r\n                <MainRouter />\r\n              </SnackbarProvider>\r\n            </BrowserRouter>\r\n          </UserProvider>\r\n        </MaterialThemeProvider>\r\n      </WindowWidthProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Root;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport './index.css';\r\nimport './assets/scss/base.scss';\r\nimport ReactDOM from 'react-dom';\r\nimport Root from './Root';\r\nimport reportWebVitals from './reportWebVitals';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Root />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}