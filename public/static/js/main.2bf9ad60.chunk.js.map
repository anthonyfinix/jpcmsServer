{"version":3,"sources":["Job/job.module.css","Sidebar/sidebar.module.css","Job/Header/header.module.css","Content/content.module.css","shared/SnackbarProvider/index.jsx","util/axios.js","UserProvider/index.jsx","Header/Components/UserWidget.jsx","Header/index.jsx","Sidebar/index.jsx","Job/NewJobDialogBox/index.jsx","Job/Header/index.jsx","Job/index.jsx","Content/index.jsx","App/index.jsx","Login/index.jsx","route.jsx","Root.js","reportWebVitals.js","index.js"],"names":["module","exports","SnackbarProvider","props","React","useState","message","setMessage","SnackbarContext","createContext","Provider","value","notify","setTimeout","children","Snackbar","open","autoHideDuration","http","axios","create","baseURL","process","interceptors","request","use","accessToken","localStorage","getItem","headers","authorization","response","setItem","split","UserContext","UserProvider","user","setUser","isLoading","setIsLoading","useEffect","get","then","data","error","finally","isUserLoading","setIsUserLoading","UserWidget","className","useContext","history","useHistory","Button","onClick","removeItem","push","username","Header","AppBar","position","Toolbar","IconButton","edge","color","Typography","variant","style","marginLeft","Sidebar","classes","wrapper","NewJobDialogBox","handleClose","createJob","selected","updateJob","isUpdate","customerName","setCustomerName","serialNumber","setSerialNumber","model","setModel","issues","setIssues","brand","setBrand","status","setStatus","amount","setAmount","moment","format","receivedDate","setReceivedDate","returnedDate","setReturnedDate","detailedDescription","setDetailedDescription","Dialog","onClose","TextField","size","onChange","e","target","label","type","FormControl","InputLabel","id","Select","MenuItem","defaultValue","InputLabelProps","shrink","console","log","multiline","_id","JobHeader","addNew","Box","display","justifyContent","alignItems","Job","jobs","setIsUpdate","setOpen","services","setServices","handleNewJobDialogClose","handleNewJobDialogOpen","selectedRowRef","useRef","currentSelectedRowRef","setCurrentSelectedRowRef","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","newJob","a","post","result","updatedJob","put","current","handleDelete","delete","content","options","search","showTitle","toolbar","icons","columns","field","title","map","job","issue","actions","icon","tooltip","event","rowData","anchorEl","keepMounted","Boolean","Content","exact","path","component","App","Login","setUsername","password","setPassword","padding","Paper","flexDirection","MainRouter","Root","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2bf9ad60.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"job_content__1AdaG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"sidebar_wrapper__1TluO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"header_wrapper__2Ks2h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"content_wrapper__3SaDL\"};","import { Snackbar } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst SnackbarProvider = (props) => {\r\n    const [message, setMessage] = React.useState(\"\");\r\n    const SnackbarContext = React.createContext(\"\");\r\n    const notify = (message) => {\r\n        setMessage(message);\r\n        setTimeout(() => setMessage(\"\"), 7000)\r\n    }\r\n    return (\r\n        <SnackbarContext.Provider value={{ notify }}>\r\n            {props.children}\r\n            <Snackbar open={!!message} autoHideDuration={6000} message={message} />\r\n        </SnackbarContext.Provider>\r\n    )\r\n}\r\nexport default SnackbarProvider;","import axios from \"axios\";\r\nconst http = axios.create({ baseURL: process.env.REACT_APP_API_URL || \"https://localhost:3001\" })\r\n\r\nhttp.interceptors.request.use(request => {\r\n    let accessToken = localStorage.getItem(\"JPtechSolutionAccessToken\");\r\n    if (accessToken) request.headers.authorization = `Bearer ${accessToken}`\r\n    return request\r\n})\r\nhttp.interceptors.response.use(response => {\r\n    let accessToken = response.headers['authorization'];\r\n    if (accessToken) localStorage.setItem(\"JPtechSolutionAccessToken\", accessToken.split(\" \")[1])\r\n    return response\r\n})\r\n\r\nexport default http;","import React from \"react\"\r\nimport http from \"../util/axios\";\r\nexport const UserContext = React.createContext(null);\r\nconst UserProvider = (props) => {\r\n    const [user, setUser] = React.useState(null);\r\n    const [isLoading, setIsLoading] = React.useState(true);\r\n    React.useEffect(() => {\r\n        let accessToken = localStorage.getItem('JPtechSolutionAccessToken');\r\n        if (accessToken) {\r\n            http.get('/user/login', { headers: { authorization: `Bearer ${accessToken}` } })\r\n                .then(response => !response.data.error && setUser(response.data))\r\n                .finally(() => setIsLoading(false))\r\n        } else {\r\n            setIsLoading(false)\r\n        }\r\n    }, [])\r\n    if (isLoading) return <h1>Loading User</h1>\r\n    return <UserContext.Provider value={{ user, setUser, isUserLoading: isLoading, setIsUserLoading: setIsLoading }}>{props.children}</UserContext.Provider>\r\n}\r\nexport default UserProvider","import React from \"react\";\r\nimport { UserContext } from \"../../UserProvider\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst UserWidget = ({ children, className, ...props }) => {\r\n    const { user, setUser } = React.useContext(UserContext);\r\n    const history = useHistory()\r\n    const handleClick = () => {\r\n        if (user) {\r\n            setUser(null)\r\n            localStorage.removeItem(\"JPtechSolutionAccessToken\");\r\n        }\r\n        history.push('/login')\r\n    }\r\n    return (\r\n        <div  {...props}>\r\n            <Button onClick={handleClick} >{user ? user.username : \"login\"}</Button>\r\n        </div>\r\n    )\r\n}\r\nexport default UserWidget;","import { AppBar, Toolbar, IconButton, Typography, Button } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport UserWidget from './Components/UserWidget';\r\nconst Header = () => {\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Typography variant=\"h6\" >\r\n                    JPCMS\r\n                </Typography>\r\n                <UserWidget style={{marginLeft:\"auto\"}} />\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\nexport default Header;","import { AppBar, Toolbar, IconButton, Typography, Button } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport classes from './sidebar.module.css';\r\nconst Sidebar = () => {\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <h5>Sidebar</h5>\r\n        </div>\r\n    )\r\n}\r\nexport default Sidebar;","import { Dialog, TextField, FormControl, InputLabel, Select, MenuItem, Button } from \"@material-ui/core\";\r\nimport React, { useEffect } from 'react';\r\nimport moment from \"moment\";\r\n\r\nconst NewJobDialogBox = ({ open, handleClose, createJob, selected, updateJob, isUpdate }) => {\r\n    const [customerName, setCustomerName] = React.useState('')\r\n    const [serialNumber, setSerialNumber] = React.useState('')\r\n    const [model, setModel] = React.useState('')\r\n    const [issues, setIssues] = React.useState('')\r\n    const [brand, setBrand] = React.useState('')\r\n    const [status, setStatus] = React.useState(false);\r\n    const [amount, setAmount] = React.useState('')\r\n    const [receivedDate, setReceivedDate] = React.useState(`${moment().format(\"YYYY\")}-${moment().format(\"MM\")}-${moment().format(\"DD\")}`);\r\n    const [returnedDate, setReturnedDate] = React.useState(`${moment().format(\"YYYY\")}-${moment().format(\"MM\")}-${moment().format(\"DD\")}`);\r\n    const [detailedDescription, setDetailedDescription] = React.useState('');\r\n    const handleReceivedDateChange = (e) => {\r\n        console.log('LOCAL', e.target.value)\r\n        setReceivedDate(e.target.value)\r\n    };\r\n    const handleReturnedDateChange = (e) => setReturnedDate(e.target.value);\r\n    const handleStatusChange = (e) => setStatus(e.target.value === \"resolved\" ? true : false)\r\n    const handleSubmit = () => {\r\n        let job = { customerName, serialNumber, model, issues, brand, status, amount, receivedDate, returnedDate, detailedDescription }\r\n        createJob(job);\r\n    }\r\n    const handleUpdate = () => {\r\n        updateJob({ id: selected._id, customerName, serialNumber, model, issues, brand, status, amount, receivedDate, returnedDate, detailedDescription })\r\n    }\r\n    useEffect(() => {\r\n        if (isUpdate && selected) {\r\n            setCustomerName(selected.customerName);\r\n            setSerialNumber(selected.serialNumber);\r\n            setModel(selected.model);\r\n            setIssues(selected.issues);\r\n            setBrand(selected.brand);\r\n            setStatus(selected.status);\r\n            setAmount(selected.amount);\r\n            setReceivedDate(`${moment(selected.receivedDate).format('YYYY')}-${moment(selected.receivedDate).format(\"MM\")}-${moment(selected.receivedDate).format(\"DD\")}`);\r\n            setReturnedDate(`${moment(selected.returnedDate).format(\"YYYY\")}-${moment(selected.returnedDate).format(\"MM\")}-${moment(selected.returnedDate).format(\"DD\")}`);\r\n            setDetailedDescription(selected.detailedDescription);\r\n        }\r\n    }, [isUpdate])\r\n    return (\r\n        <Dialog open={open} onClose={handleClose}>\r\n            <div className=\"add-new-service-wrapper\">\r\n                <TextField size=\"small\" value={customerName} onChange={e => setCustomerName(e.target.value)} label=\"Customer Name\" variant=\"outlined\" />\r\n                <TextField size=\"small\" value={serialNumber} onChange={e => setSerialNumber(e.target.value)} label=\"Serial Number\" variant=\"outlined\" type=\"number\" />\r\n                <TextField size=\"small\" value={model} onChange={e => setModel(e.target.value)} label=\"Model\" variant=\"outlined\" />\r\n                <TextField size=\"small\" value={issues} onChange={e => setIssues(e.target.value)} label=\"Issues\" variant=\"outlined\" />\r\n                <TextField size=\"small\" value={brand} onChange={e => setBrand(e.target.value)} label=\"Brand\" variant=\"outlined\" />\r\n                <FormControl variant=\"outlined\" size=\"small\">\r\n                    <InputLabel id=\"demo-simple-select-outlined-label\">Status</InputLabel>\r\n                    <Select value={status === true ? \"resolved\" : \"returned\"} onChange={handleStatusChange}>\r\n                        <MenuItem value=\"resolved\">Resolved</MenuItem>\r\n                        <MenuItem value=\"returned\">Return</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <TextField size=\"small\" value={amount} onChange={e => setAmount(e.target.value)} label=\"Amount\" variant=\"outlined\" />\r\n                <TextField\r\n                    id=\"date\"\r\n                    label=\"Received Date\"\r\n                    type=\"date\"\r\n                    defaultValue={receivedDate}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={handleReceivedDateChange}\r\n                />\r\n                <TextField\r\n                    id=\"date\"\r\n                    label=\"Returned Date\"\r\n                    type=\"date\"\r\n                    defaultValue={returnedDate}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={handleReturnedDateChange}\r\n                />\r\n                <TextField value={detailedDescription} onChange={e => setDetailedDescription(e.target.value)} size=\"small\" label=\"Detailed Description\" multiline variant=\"outlined\" />\r\n                {isUpdate ? <Button onClick={handleUpdate}>Update</Button> : <Button onClick={handleSubmit}>Add New Job</Button>}\r\n            </div>\r\n        </Dialog>\r\n    )\r\n}\r\nexport default NewJobDialogBox;","import React from 'react';\r\nimport { Button,Box } from '@material-ui/core';\r\nimport classes from './header.module.css';\r\nconst JobHeader = ({addNew}) => {\r\n    return (\r\n        <Box display=\"flex\" className={classes.wrapper} justifyContent=\"space-between\" alignItems=\"center\">\r\n            <h1>Jobs</h1>\r\n            <Button onClick={addNew} variant=\"contained\">Add New</Button>\r\n        </Box>\r\n    )\r\n}\r\nexport default JobHeader;","import React, { forwardRef } from 'react';\r\nimport http from '../util/axios';\r\nimport NewJobDialogBox from '../Job/NewJobDialogBox';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport JobHeader from './Header';\r\nimport classes from './job.module.css'\r\nimport MaterialTable from 'material-table';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport { Menu, MenuItem } from '@material-ui/core'\r\nimport moment from 'moment';\r\nconst Job = () => {\r\n    const [isUpdate, setIsUpdate] = React.useState(false)\r\n    const [open, setOpen] = React.useState(false)\r\n    const [services, setServices] = React.useState([]);\r\n    const handleNewJobDialogClose = () => {\r\n        setOpen(false);\r\n        if(isUpdate) setIsUpdate(false)\r\n    };\r\n    const handleNewJobDialogOpen = () => setOpen(true);\r\n    const selectedRowRef = React.useRef(null);\r\n    const [currentSelectedRowRef, setCurrentSelectedRowRef] = React.useState(null)\r\n    const tableIcons = {\r\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n        DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n        PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n        SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n        ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n    };\r\n    const createJob = async (newJob) => {\r\n        let response = await http.post('/service', { ...newJob })\r\n        if (!response.error) {\r\n            handleNewJobDialogClose();\r\n            let response = await http.get('/service');\r\n            setServices(response.data.result);\r\n        }\r\n    }\r\n    const updateJob = async (updatedJob) => {\r\n        let response = await http.put('/service', { ...updatedJob })\r\n        if (!response.error) {\r\n            handleNewJobDialogClose();\r\n            let response = await http.get('/service');\r\n            setServices(response.data.result);\r\n            selectedRowRef.current = null;\r\n        }\r\n        setIsUpdate(false)\r\n    }\r\n    const columns = [\r\n        { field: 'customerName', title: \"Customer Name\", },\r\n        { field: \"serialNumber\", title: \"Sr.No\", },\r\n        { field: \"model\", title: \"Model\", },\r\n        // { field: \"issue\", title: \"Issue\", },\r\n        // { field: \"brand\", title: \"Brand\", width: 120,},\r\n        { field: \"receivedDate\", title: \"Rec Date\", },\r\n        { field: \"returnedDate\", title: \"Ret Date\", },\r\n        // { field: \"detailedDescription\", title: \"Description\", },\r\n        { field: \"amount\", title: \"Amount\" },\r\n    ]\r\n    const filterColumns = (jobs) => {\r\n        let rows = jobs.map(job => {\r\n            return {\r\n                id: job._id,\r\n                serialNumber: job.serialNumber,\r\n                customerName: job.customerName,\r\n                model: job.model,\r\n                issue: job.issues,\r\n                brand: job.brand,\r\n                receivedDate: moment(job.receivedDate).format(\"Do MMM YY\"),\r\n                returnedDate: moment(job.returnedDate).format(\"Do MMM YY\"),\r\n                detailedDescription: job.detailedDescription,\r\n                amount: job.amount\r\n            }\r\n        })\r\n        // console.log(rows)\r\n        return rows;\r\n    }\r\n    const handleEdit = () => {\r\n        setCurrentSelectedRowRef(null);\r\n        handleNewJobDialogOpen()\r\n        setIsUpdate(true)\r\n    }\r\n    const handleDelete = async () => {\r\n        await http.delete(`/service/${selectedRowRef.current._id}`);\r\n        let response = await http.get('/service')\r\n        setServices(response.data.result)\r\n        setCurrentSelectedRowRef(null)\r\n    }\r\n    React.useEffect(() => {\r\n        http.get('/service').then(response => {\r\n            setServices(response.data.result);\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className={classes.content}>\r\n            <JobHeader addNew={handleNewJobDialogOpen} />\r\n            <MaterialTable\r\n                options={{ search: false, showTitle: false, toolbar: false }}\r\n                icons={tableIcons}\r\n                className={classes.wrapper}\r\n                columns={columns}\r\n                data={filterColumns(services)}\r\n                actions={[\r\n                    {\r\n                        icon: () => <MoreVertIcon />,\r\n                        tooltip: 'Save User',\r\n                        onClick: (event, rowData) => {\r\n                            setCurrentSelectedRowRef(event.target)\r\n                            http.get(`/service/${rowData.id}`).then(response => {\r\n                                selectedRowRef.current = response.data.result;\r\n                            })\r\n                        }\r\n                    }\r\n                ]}\r\n            />\r\n            <NewJobDialogBox\r\n                open={open}\r\n                handleClose={handleNewJobDialogClose}\r\n                createJob={createJob}\r\n                updateJob={updateJob}\r\n                selected={selectedRowRef.current}\r\n                isUpdate={isUpdate}\r\n            />\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={currentSelectedRowRef}\r\n                keepMounted\r\n                open={Boolean(currentSelectedRowRef)}\r\n                onClose={() => setCurrentSelectedRowRef(null)}\r\n            >\r\n                <MenuItem onClick={handleDelete}>Delete</MenuItem>\r\n                <MenuItem onClick={handleEdit}>Update</MenuItem>\r\n            </Menu>\r\n        </div>\r\n    )\r\n}\r\nexport default Job;","import React from 'react';\r\nimport { Switch, useRouteMatch, Route } from 'react-router-dom';\r\nimport Job from '../Job';\r\nimport classes from './content.module.css';\r\nconst Content = () => {\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Job} />\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\nexport default Content;","import Header from '../Header';\r\nimport Sidebar from '../Sidebar';\r\nimport Content from '../Content';\r\nimport React from 'react';\r\nimport { UserContext } from '../UserProvider';\r\nimport { useHistory } from 'react-router';\r\nconst App = () => {\r\n    const {user} = React.useContext(UserContext);\r\n    const history = useHistory()\r\n    React.useEffect(()=>{\r\n        if(!user) history.push('/login')\r\n    },[])\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className=\"content-wrapper\">\r\n                <Sidebar />\r\n                <Content />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default App;","import React from 'react';\r\nimport { Box, Button, Paper, TextField } from \"@material-ui/core\";\r\nimport http from '../util/axios';\r\nimport { UserContext } from '../UserProvider';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst Login = () => {\r\n    const history = useHistory();\r\n    const [username, setUsername] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n    const { user, setUser } = React.useContext(UserContext);\r\n    const login = () => {\r\n        http.post('/user/login', { username, password }).then(response => {\r\n            console.log(response)\r\n            if (!response.data.error) {\r\n                setUser(response.data.user)\r\n            }\r\n        })\r\n    }\r\n    React.useEffect(() => {\r\n        if (user) history.push('/');\r\n    })\r\n    return (\r\n        <Box padding={10}>\r\n            <Paper>\r\n                <Box display=\"flex\" flexDirection=\"column\" padding={10}>\r\n                    <TextField label=\"username\" value={username} variant=\"outlined\" onChange={(e) => setUsername(e.target.value)} />\r\n                    <TextField type=\"password\" label=\"password\" value={password} variant=\"outlined\" onChange={(e) => setPassword(e.target.value)} />\r\n                    <Button onClick={login}>Login</Button>\r\n                </Box>\r\n\r\n            </Paper>\r\n        </Box>\r\n    )\r\n}\r\nexport default Login;","import { Switch, Route } from 'react-router-dom'\r\nimport App from \"./App\";\r\nimport Login from \"./Login\";\r\n\r\nconst MainRouter = () => {\r\n    return (\r\n        <Switch>\r\n            {console.log(process.env)}\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Route exact path=\"/\" component={App} />\r\n        </Switch>\r\n    )\r\n}\r\nexport default MainRouter;","import './Root.css';\nimport SnackbarProvider from './shared/SnackbarProvider';\nimport { BrowserRouter } from 'react-router-dom';\nimport MainRouter from './route';\nimport UserProvider from './UserProvider/index';\nfunction Root() {\n  return (\n    <UserProvider>\n      <BrowserRouter>\n        <SnackbarProvider>\n          <MainRouter />\n        </SnackbarProvider>\n      </BrowserRouter>\n    </UserProvider>\n  );\n}\n\nexport default Root;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}